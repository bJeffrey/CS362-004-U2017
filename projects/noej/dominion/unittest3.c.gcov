        -:    0:Source:unittest3.c
        -:    0:Graph:unittest3.gcno
        -:    0:Data:unittest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function printTestResults called 1 returned 100% blocks executed 67%
        1:    8:void printTestResults(int test){
        1:    9:      if(test == 0)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   10:            printf("Test Failed.\n");
call    0 never executed
        1:   11:      else if(test == 1)
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   12:            printf("Test Passed.\n");
call    0 returned 1
        -:   13:      else
    #####:   14:            printf("Function returned unexpected value.\n");
call    0 never executed
        1:   15:}
        -:   16:
        -:   17:// with a newly initialized game, 'whoseTurn should always return a 0'
function whoseTurnTest called 1 returned 100% blocks executed 86%
        1:   18:int whoseTurnTest(){
        -:   19:
        -:   20:      //Default cards, as defined in playDom
        -:   21:      // The following three lines are from player.c to initialize the game
        1:   22:      int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};
        -:   23:      struct gameState state;
        1:   24:      initializeGame(3,k,1,&state);
call    0 returned 1
        -:   25:
        1:   26:      int result = whoseTurn(&state);
call    0 returned 1
        -:   27:
        1:   28:      if(result == 0)
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   29:            return 1;
        -:   30:      else
    #####:   31:            return 0;
        -:   32:}
        -:   33:
function main called 1 returned 100% blocks executed 100%
        1:   34:int main(){
        -:   35:
        1:   36:      printf("Testing the 'whoseTurn' function...\n");
call    0 returned 1
        1:   37:      int testResults = whoseTurnTest();
call    0 returned 1
        1:   38:      printTestResults(testResults);
call    0 returned 1
        -:   39:
        1:   40:      return 0;
        -:   41:}
