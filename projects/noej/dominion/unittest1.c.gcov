        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function printTestResults called 1 returned 100% blocks executed 67%
        1:    8:void printTestResults(int test){
        1:    9:      if(test == 0)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   10:            printf("Test Failed.\n");
call    0 never executed
        1:   11:      else if(test == 1)
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   12:            printf("Test Passed.\n");
call    0 returned 1
        -:   13:      else
    #####:   14:            printf("Function returned unexpected value.\n");
call    0 never executed
        1:   15:}
        -:   16:
function compareTest called 1 returned 100% blocks executed 75%
        1:   17:int compareTest(){
        1:   18:      int a = 10;
        1:   19:      int b = 9;
        1:   20:      int *ptr1 = &a;
        1:   21:      int *ptr2 = &b;
        -:   22:
        1:   23:      if(compare(ptr1, ptr2) != 1)
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   24:            return 0;
        1:   25:      else if(compare(ptr2, ptr1) != -1)
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   26:            return 0;
        1:   27:      else if(compare(ptr2, ptr2) != 0)
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   28:            return 0;
        -:   29:      else
        1:   30:            return 1;
        -:   31:}
function main called 1 returned 100% blocks executed 100%
        1:   32:int main(){
        -:   33:
        1:   34:      printf("Testing the 'compare' function...\n");
call    0 returned 1
        1:   35:      int testResults = compareTest();
call    0 returned 1
        1:   36:      printTestResults(testResults);
call    0 returned 1
        -:   37:
        1:   38:      return 0;
        -:   39:}
